{
 "etype": "ValueError",
 "evalue": "ValueError('not enough values to unpack (expected 2, got 1)')",
 "exception": {
  "args": [
   40,
   39,
   110,
   111,
   116,
   32,
   101,
   110,
   111,
   117,
   103,
   104,
   32,
   118,
   97,
   108,
   117,
   101,
   115,
   32,
   116,
   111,
   32,
   117,
   110,
   112,
   97,
   99,
   107,
   32,
   40,
   101,
   120,
   112,
   101,
   99,
   116,
   101,
   100,
   32,
   50,
   44,
   32,
   103,
   111,
   116,
   32,
   49,
   41,
   39,
   44,
   41
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   86,
   97,
   108,
   117,
   101,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://172.16.0.66/api/method/frappe.desk.search.search_link' [POST]>)",
   "dump": {
    "frappe. api": "<module 'frappe.api' from '/home/abigael/frappe-bench/apps/frappe/frappe/api.py'>",
    "frappe.api. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "95": "",
    "96": "\t\telif request.path.startswith(\"/api/\"):",
    "97": "\t\t\tresponse = frappe.api.handle()",
    "98": "",
    "99": "\t\telif request.path.startswith(\"/backups\"):"
   },
   "lnum": 97
  },
  {
   "call": "()",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/abigael/frappe-bench/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/api.py",
   "func": "handle",
   "lines": {
    "53": "\tif call == \"method\":",
    "54": "\t\tfrappe.local.form_dict.cmd = doctype",
    "55": "\t\treturn frappe.handler.handle()",
    "56": "",
    "57": "\telif call == \"resource\":"
   },
   "lnum": 55
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'frappe.desk.search.search_link'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "46": "",
    "47": "\tif cmd != \"login\":",
    "48": "\t\tdata = execute_cmd(cmd)",
    "49": "",
    "50": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 48
  },
  {
   "call": "(cmd='frappe.desk.search.search_link', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'txt': 'Mark Issue as Unresolved', 'doctype': '...sition', 'cmd': 'frappe.desk.search.search_link'}",
    "global frappe": "<module 'frappe' from '/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "method": "<function search_link>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "84": "\t\tis_valid_http_method(method)",
    "85": "",
    "86": "\treturn frappe.call(method, **frappe.form_dict)",
    "87": "",
    "88": ""
   },
   "lnum": 86
  },
  {
   "call": "(fn=<function search_link>, *args=(), **kwargs={'cmd': 'frappe.desk.search.search_link', 'doctype': 'Workflow Action Master', 'ignore_user_permissions': '0', 'reference_doctype': 'Workflow Transition', 'txt': 'Mark Issue as Unresolved'})",
   "dump": {
    "args": "()",
    "fn": "<function search_link>",
    "newargs": "{'doctype': 'Workflow Action Master', 'ignore_user_permissions': '0', 'reference_doctype': 'Workflow Transition', 'txt': 'Mark Issue as Unresolved'}"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1617": "\tnewargs = get_newargs(fn, kwargs)",
    "1618": "",
    "1619": "\treturn fn(*args, **newargs)",
    "1620": "",
    "1621": ""
   },
   "lnum": 1619
  },
  {
   "call": "(doctype='Workflow Action Master', txt='Mark Issue as Unresolved', query=None, filters=None, page_length=20, searchfield=None, reference_doctype='Workflow Transition', ignore_user_permissions='0')",
   "dump": {
    "doctype": "'Workflow Action Master'",
    "filters": "None",
    "global search_widget": "<function search_widget>",
    "ignore_user_permissions": "'0'",
    "page_length": "20",
    "query": "None",
    "reference_doctype": "'Workflow Transition'",
    "searchfield": "None",
    "txt": "'Mark Issue as Unresolved'",
    "txt. strip": "<built-in method strip of str object>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/desk/search.py",
   "func": "search_link",
   "lines": {
    "35": "\tignore_user_permissions=False,",
    "36": "):",
    "37": "\tsearch_widget(",
    "38": "\t\tdoctype,",
    "39": "\t\ttxt.strip(),"
   },
   "lnum": 37
  },
  {
   "call": "(doctype='Workflow Action Master', txt='Mark Issue as Unresolved', query=None, searchfield='name', start=0, page_length=20, filters=[], filter_fields=None, as_dict=False, reference_doctype='Workflow Transition', ignore_user_permissions='0')",
   "dump": {
    "as_dict": "False",
    "as_list": "undefined",
    "doctype": "'Workflow Action Master'",
    "fields": "['name']",
    "filters": "[]",
    "formatted_fields": "['`tabWorkflow Action Master`.`name`', \"(1 / nullif(locate('Mark Issue as Unresolved', `...kflow Action Master`.`name`), 0)) as `_relevance`\"]",
    "frappe. get_list": "<function get_list>",
    "global frappe": "<module 'frappe' from '/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "ignore_permissions": "0",
    "limit_page_length": "undefined",
    "limit_start": "undefined",
    "meta": "<Meta: Workflow Action Master>",
    "meta. translated_doctype": "0",
    "or_filters": "[['Workflow Action Master', 'name', 'like', '%Mark Issue as Unresolved%']]",
    "order_by": "'ifnull(_relevance, -9999) desc, `tabWorkflow Act...desc, `tabWorkflow Action Master`.`modified` DESC'",
    "page_length": "20",
    "reference_doctype": "'Workflow Transition'",
    "start": "0",
    "strict": "undefined",
    "values": "undefined"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/desk/search.py",
   "func": "search_widget",
   "lines": {
    "214": "\t\t\t)",
    "215": "",
    "216": "\t\t\tvalues = frappe.get_list(",
    "217": "\t\t\t\tdoctype,",
    "218": "\t\t\t\tfilters=filters,"
   },
   "lnum": 216
  },
  {
   "call": "(doctype='Workflow Action Master', *args=(), **kwargs={'as_list': True, 'fields': ['`tabWorkflow Action Master`.`name`', \"(1 / nullif(locate('Mark Issue as Unresolved', `...kflow Action Master`.`name`), 0)) as `_relevance`\"], 'filters': [], 'ignore_permissions': 0, 'limit_page_length': 20, 'limit_start': 0, 'or_filters': [['Workflow Action Master', 'name', 'like', '%Mark Issue as Unresolved%']], 'order_by': 'ifnull(_relevance, -9999) desc, `tabWorkflow Act...desc, `tabWorkflow Action Master`.`modified` DESC', 'reference_doctype': 'Workflow Transition', 'strict': False})",
   "dump": {
    ").execute": "undefined",
    "args": "()",
    "doctype": "'Workflow Action Master'",
    "frappe": "<module 'frappe' from '/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "frappe. model": "<module 'frappe.model' from '/home/abigael/frappe-bench/apps/frappe/frappe/model/__init__.py'>",
    "frappe.model. db_query": "<module 'frappe.model.db_query' from '/home/abig...appe-bench/apps/frappe/frappe/model/db_query.py'>",
    "frappe.model.db_query. DatabaseQuery": "<class 'frappe.model.db_query.DatabaseQuery'>",
    "kwargs": "{'as_list': True, 'fields': ['`tabWorkflow Action Master`.`name`', \"(1 / nullif(locate('Mark Issue as Unresolved', `...kflow Action Master`.`name`), 0)) as `_relevance`\"], 'filters': [], 'ignore_permissions': 0, 'limit_page_length': 20, 'limit_start': 0, 'or_filters': [['Workflow Action Master', 'name', 'like', '%Mark Issue as Unresolved%']], 'order_by': 'ifnull(_relevance, -9999) desc, `tabWorkflow Act...desc, `tabWorkflow Action Master`.`modified` DESC', 'reference_doctype': 'Workflow Transition', 'strict': False}"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "get_list",
   "lines": {
    "1908": "\timport frappe.model.db_query",
    "1909": "",
    "1910": "\treturn frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)",
    "1911": "",
    "1912": ""
   },
   "lnum": 1910
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>, fields=['`tabWorkflow Action Master`.`name`', \"(1 / nullif(locate('Mark Issue as Unresolved', `...kflow Action Master`.`name`), 0)) as `_relevance`\"], filters=[], or_filters=[['Workflow Action Master', 'name', 'like', '%Mark Issue as Unresolved%']], docstatus=None, group_by=None, order_by='ifnull(_relevance, -9999) desc, `tabWorkflow Act...desc, `tabWorkflow Action Master`.`modified` DESC', limit_start=0, limit_page_length=20, as_list=True, with_childnames=False, debug=False, ignore_permissions=0, user=None, with_comment_count=False, join='left join', distinct=False, start=None, page_length=None, limit=None, ignore_ifnull=False, save_user_settings=False, save_user_settings_fields=False, update=None, add_total_row=None, user_settings=None, reference_doctype='Workflow Transition', run=True, strict=False, pluck=None, ignore_ddl=False, parent_doctype=None)",
   "dump": {
    "result": "undefined",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. build_and_run": "<bound method DatabaseQuery.build_and_run of <frappe.model.db_query.DatabaseQuery object>>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "execute",
   "lines": {
    "189": "\t\t\treturn []",
    "190": "",
    "191": "\t\tresult = self.build_and_run()",
    "192": "",
    "193": "\t\tif sbool(with_comment_count) and not as_list and self.doctype:"
   },
   "lnum": 191
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>)",
   "dump": {
    "args": "undefined",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. prepare_args": "<bound method DatabaseQuery.prepare_args of <frappe.model.db_query.DatabaseQuery object>>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "build_and_run",
   "lines": {
    "204": "",
    "205": "\tdef build_and_run(self):",
    "206": "\t\targs = self.prepare_args()",
    "207": "\t\targs.limit = self.add_limit()",
    "208": ""
   },
   "lnum": 206
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>)",
   "dump": {
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. parse_args": "<bound method DatabaseQuery.parse_args of <frappe.model.db_query.DatabaseQuery object>>"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "prepare_args",
   "lines": {
    "240": "",
    "241": "\tdef prepare_args(self):",
    "242": "\t\tself.parse_args()",
    "243": "\t\tself.sanitize_fields()",
    "244": "\t\tself.extract_tables()"
   },
   "lnum": 242
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>)",
   "dump": {
    "field": "\"(1 / nullif(locate('Mark Issue\"",
    "field. split": "<built-in method split of str object>",
    "fieldname": "'`name`'",
    "linked_fieldname": "'`tabWorkflow Action Master`'"
   },
   "file": "/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "parse_args",
   "lines": {
    "346": "\t\t\t\tif \" as \" in field:",
    "347": "\t\t\t\t\tfield, alias = field.split(\" as \", 1)",
    "348": "\t\t\t\tlinked_fieldname, fieldname = field.split(\".\", 1)",
    "349": "\t\t\t\tlinked_field = self.doctype_meta.get_field(linked_fieldname)",
    "350": "\t\t\t\t# this is not a link field"
   },
   "lnum": 348
  }
 ],
 "locals": {
  "alias": "Unresolved', `tabWorkflow Action Master`.`name`), 0)) as `_relevance`",
  "field": "(1 / nullif(locate('Mark Issue",
  "fieldname": "`name`",
  "linked_field": "None",
  "linked_fieldname": "`tabWorkflow Action Master`",
  "original_field": "(1 / nullif(locate('Mark Issue as Unresolved', `tabWorkflow Action Master`.`name`), 0)) as `_relevance`",
  "self": "<frappe.model.db_query.DatabaseQuery object>"
 },
 "pyver": "Python 3.10.12: /home/abigael/frappe-bench/env/bin/python (prefix: /home/abigael/frappe-bench/env)",
 "timestamp": "2025-02-26 06:04:11.535031",
 "traceback": "Traceback (most recent call last):\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/app.py\", line 97, in application\n    response = frappe.api.handle()\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/api.py\", line 55, in handle\n    return frappe.handler.handle()\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/handler.py\", line 48, in handle\n    data = execute_cmd(cmd)\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/handler.py\", line 86, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py\", line 1619, in call\n    return fn(*args, **newargs)\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/desk/search.py\", line 37, in search_link\n    search_widget(\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/desk/search.py\", line 216, in search_widget\n    values = frappe.get_list(\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/__init__.py\", line 1910, in get_list\n    return frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 191, in execute\n    result = self.build_and_run()\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 206, in build_and_run\n    args = self.prepare_args()\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 242, in prepare_args\n    self.parse_args()\n  File \"/home/abigael/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 348, in parse_args\n    linked_fieldname, fieldname = field.split(\".\", 1)\nValueError: not enough values to unpack (expected 2, got 1)\n"
}